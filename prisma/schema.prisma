generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(cuid())
  clerkId         String        @unique
  telegramId      BigInt?      @unique
  sessionString   String?
  username        String?
  firstName       String?
  lastName        String?
  tempPhoneNumber String?
  tempPhoneCodeHash String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  subjects        UserSubject[] @relation("UserRelation")
  files           File[]
}

model UserSubject {
  id              String   @id @default(cuid())
  clerkId         String   // Foreign key to User model
  subject         String
  channelId       BigInt
  type            String   // "Main" | "Theory" | "Practical"
  user            User     @relation(fields: [clerkId], references: [clerkId]) // Reference to Clerk ID
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([clerkId, subject, type]) // Ensure unique combination of clerkId, subject, and type
}

model File {
  id        String   @id @default(cuid())
  name      String
  size      Int
  url       String
  userId    String
  subject   String
  type      String   // "Theory" | "Practical"
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, subject, type])
}

model Message {
  id        String   @id @default(cuid())
  messageId String
  channelId String
  userId    String
  fileName  String
  fileSize  Int
  fileType  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([messageId, channelId])
  @@index([userId])
  @@index([channelId])
} 

